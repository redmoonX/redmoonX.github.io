{"version":3,"sources":["CharTemplate.js","Characters.js","HWTemplate.js","Homeworlds.js","SSTemplate.js","Starships.js","VehTemplate.js","Vehicles.js","Filmscroll.js","FilmTemplate.js","Films.js","App.js","serviceWorker.js","index.js"],"names":["CharTemplate","name","gender","homeworld","height","mass","className","alt","src","Characters","charName","charHeight","charMass","charHome","charGender","HWTemplate","Homeworlds","SSTemplate","Starships","Vehicles","VehTemplate","Filmscroll","props","style","overflowY","children","Films","FilmTemplate","App","state","allchars","charindex","worldindex","shipindex","vehicleindex","filmindex","worlds","cworlds","ships","vehix","films","cview","wview","sview","vview","fview","self","this","a","fetch","resp","json","data","results","detail","setState","apiGetAll","apiGetAll1","apiGetAll2","apiGetAll3","apiGetAll4","giveitDATA","nameJob","genderJob","heightJob","massJob","homewJob","then","response","world","homewcValueJob","homewValueJob","nameJob1","genderJob1","climate","heightJob1","terrain","massJob1","population","nameJob2","genderJob2","model","heightJob2","manufacturer","massJob2","crew","homewJob2","length","nameJob3","genderJob3","heightJob3","massJob3","homewJob3","nameJob4","title","genderJob4","episode_id","heightJob4","release_date","massJob4","opening_crawl","viewToggle","viewToggle1","viewToggle2","viewToggle3","viewToggle4","cButton","wButton","sButton","vButton","fButton","variant","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a141c0a.chunk.js","sourcesContent":["import React from 'react';\nimport './CharTemplate.css';\n\nconst CharTemplate = ({ name, gender, homeworld, height, mass }) => {\n\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img className='chartest' alt='robots' src={`https://robohash.org/${name}?200x200`} />\n\t\t\t<div className='statsleft'>\n\t\t\t\t<p>Name: {name}</p>\n\t\t\t\t<p>Gender: {gender}</p>\n\t\t\t\t<p>Height: {height} cm</p>\n\t\t\t\t<p>Mass: {mass} kg</p>\n\t\t\t\t<p>Homeworld: {homeworld}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n\n\n}\n\nexport default CharTemplate;","import React from 'react';\nimport CharTemplate from './CharTemplate';\n\n\nconst Characters = ({ charName, charHeight, charMass, charHome, charGender }) => {\nreturn (\n\t<div>\n\n\n\n\t<CharTemplate \n\t\tname={charName}\n\t\tgender={charGender}\n\t\theight={charHeight}\n\t\tmass={charMass}\n\t\thomeworld={charHome}\n\t\t />\n\t\t\n\t\t\n\n\n\n\n\t\n</div>\n)\t\n} \n\n\nexport default Characters;\n\n\n// return(<div name={robots.map()}></div>);\n\n\n\n\n// import React from 'react';\n// import CharTemplate from './CharTemplate';\n\n \n// const Characters = ({ people }) => {\n// return (<div><CharTemplate \n// \tname={console.log({ people })}\n// \t\t// height={}\n// \t// name={robots.results[0].name}\n// \t// gender={robots.robots.results[0].gender}\n// \t// height={robots.results[0].height}\n// \t// weight={robots.results[0].weight}\n// \t/>\n// \t</div>)\n// }\n\n// \t<div>\n// \t<CharTemplate\n// \tname={console.log(Characters)}\n// \tgender={robots.gender}\n// \theight='massively massive'\n// \t/>\n// \t</div> );\n// }\n\n// export default Characters;\n\n\n\n\n\n\n\n// const Characters = ({ robots }) => {\n\t\n// \treturn (\n// \t\t<div>\n// \t\t\t{\n// \t\t\t\t\tthis.map((user, i) => {\n// \t\t\t\t\t\treturn (<CharTemplate \n// \t\t\t\t\t\t\tkey={i} \n// \t\t\t\t\t\t\tid={robots[i].id} \n// \t\t\t\t\t\t\tname={robots[i].name} \n// \t\t\t\t\t\t\temail={robots[i].email}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t);\n// \t\t\t\t})\n\n// \t\t\t}\n// \t\t</div>\n// \t);\n// }\n\n","import React from 'react';\n\nconst HWTemplate = ({ name, gender, homeworld, height, mass }) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${name}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<p>Name: {name}</p>\n\t\t\t\t<p>Climate: {gender}</p>\n\t\t\t\t<p>Terrain: {height}</p>\n\t\t\t\t<p>Population: {mass}</p>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n\n\n}\n\nexport default HWTemplate;","import React from 'react';\nimport HWTemplate from './HWTemplate';\n\n\nconst Homeworlds = ({ charName, charHeight, charMass, charHome, charGender }) => {\nreturn (\n\t<div>\n\n\n\t<HWTemplate \n\t\tname={charName}\n\t\tgender={charGender}\n\t\theight={charHeight}\n\t\tmass={charMass}\n\t\thomeworld={charHome}\n\t\t />\n\t\t\n\t\t\n\n\n\n\n\t\n</div>\n)\t\n} \n\n\nexport default Homeworlds;","import React from 'react';\n\nconst SSTemplate = ({ name, gender, homeworld, height, mass }) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${name}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<p>Name: {name}</p>\n\t\t\t\t<p>Model: {gender}</p>\n\t\t\t\t<p>Manufacturer: {height}</p>\n\t\t\t\t<p>Crew: {mass}</p>\n\t\t\t\t<p>Length: {homeworld}</p>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n\n\n}\n\nexport default SSTemplate;","import React from 'react';\nimport SSTemplate from './SSTemplate';\n\n\nconst Starships = ({ charName, charHeight, charMass, charHome, charGender }) => {\nreturn (\n\t<div>\n\n\n\t<SSTemplate \n\t\tname={charName}\n\t\tgender={charGender}\n\t\theight={charHeight}\n\t\tmass={charMass}\n\t\thomeworld={charHome}\n\t\t />\n\t\t\n\t\t\n\n\n\n\n\t\n</div>\n)\t\n} \n\n\nexport default Starships;","import React from 'react';\n\nconst SSTemplate = ({ name, gender, homeworld, height, mass }) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${name}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<p>Name: {name}</p>\n\t\t\t\t<p>Model: {gender}</p>\n\t\t\t\t<p>Manufacturer: {height}</p>\n\t\t\t\t<p>Crew: {mass}</p>\n\t\t\t\t<p>Length: {homeworld}</p>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n\n\n}\n\nexport default SSTemplate;","import React from 'react';\nimport VehTemplate from './VehTemplate';\n\n\nconst Vehicles = ({ charName, charHeight, charMass, charHome, charGender }) => {\nreturn (\n\t<div>\n\n\n\t<VehTemplate \n\t\tname={charName}\n\t\tgender={charGender}\n\t\theight={charHeight}\n\t\tmass={charMass}\n\t\thomeworld={charHome}\n\t\t />\n\t\t\n\t\t\n\n\n\n\n\t\n</div>\n)\t\n} \n\n\nexport default Vehicles;","import React from 'react';\n\nconst Filmscroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', height: '50px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Filmscroll;","import React from 'react';\nimport Filmscroll from './Filmscroll.js';\n\nconst SSTemplate = ({ name, gender, homeworld, height, mass }) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${name}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<p>Title: {name}</p>\n\t\t\t\t<p>Episode: {gender}</p>\n\t\t\t\t<p>Release Date: {height}</p>\n\t\t\t\t<p>Intro: \n\t\t\t\t<Filmscroll>{mass}\n\t\t\t\t</Filmscroll>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n\n\n}\n\nexport default SSTemplate;","import React from 'react';\nimport FilmTemplate from './FilmTemplate';\n\n\nconst Films = ({ charName, charHeight, charMass, charHome, charGender }) => {\nreturn (\n\t<div>\n\n\n\t<FilmTemplate \n\t\tname={charName}\n\t\tgender={charGender}\n\t\theight={charHeight}\n\t\tmass={charMass}\n\t\thomeworld={charHome}\n\t\t />\n\t\t\n\t\t\n\n\n\n\n\t\n</div>\n)\t\n} \n\n\nexport default Films;","import React, { Component } from 'react';\nimport Characters from './Characters.js';\nimport './App.css';\nimport Homeworlds from './Homeworlds.js';\nimport Starships from './Starships.js';\nimport Vehicles from './Vehicles.js';\nimport Films from './Films.js';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n// import Filmscroll from './Filmscroll.js';\n\n// import Background from './Background.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n      this.state = { \n        // robots: [],\n        allchars: [],\n        charindex: 0,\n        worldindex: 0,\n        shipindex: 0,\n        vehicleindex: 0,\n        filmindex: 0,\n        worlds: [],\n        cworlds: [],\n        ships: [],\n        vehix: [],\n        films: [],\n        // residents: [],\n        cview: 'Cvisible',\n        wview: 'Wvisible',\n        sview: 'Svisible',\n        vview: 'Vvisible',\n        fview: 'Fvisible'\n      }\n  }\n\n  // componentDidMount() {\n  //   // fetch('https://swapi.co/api/people/6/')\n  //   // .then(response => response.json())\n  //   // .then(users => this.setState( { robots: users }));\n  //   // fetch('https://swapi.co/api/planets/1/')\n  //   // .then(response => response.json())\n  //   // .then(users => this.setState( { worlds: users }));\n  //   fetch('https://swapi.co/api/starships/2/')\n  //   .then(response => response.json())\n  //   .then(users => this.setState( { ships: users }));\n  //   fetch('https://swapi.co/api/vehicles/4/')\n  //   .then(response => response.json())\n  //   .then(users => this.setState( { vehix: users }));\n  //   fetch('https://swapi.co/api/films/1/')\n  //   .then(response => response.json())\n  //   .then(users => this.setState( { films: users }));\n  //   }\n\nrender() {\n\n\n    const self = this;\n    async function apiGetAll () {\n      const resp = await fetch('https://swapi.co/api/people/')\n      const data = await resp.json()\n      const detail = await data.results[self.state.charindex]\n      const statehood = await self.setState( { allchars: detail } )\n      return detail };\n  apiGetAll();\n\n    async function apiGetAll1 () {\n      const resp = await fetch('https://swapi.co/api/planets/')\n      const data = await resp.json()\n      const detail = await data.results[self.state.worldindex]\n      const statehood = await self.setState( { worlds: detail } )\n      return detail };\n  apiGetAll1();\n\n      async function apiGetAll2 () {\n      const resp = await fetch('https://swapi.co/api/starships/')\n      const data = await resp.json()\n      const detail = await data.results[self.state.shipindex]\n      const statehood = await self.setState( { ships: detail } )\n      return detail };\n  apiGetAll2();\n\n      async function apiGetAll3 () {\n      const resp = await fetch('https://swapi.co/api/vehicles/')\n      const data = await resp.json()\n      const detail = await data.results[self.state.vehicleindex]\n      const statehood = await self.setState( { vehix: detail } )\n      return detail };\n  apiGetAll3();\n\n      async function apiGetAll4 () {\n      const resp = await fetch('https://swapi.co/api/films/')\n      const data = await resp.json()\n      const detail = await data.results[self.state.filmindex]\n      const statehood = await self.setState( { films: detail } )\n      return detail };\n  apiGetAll4();\n\n  const giveitDATA = this.state;\n\n  // Characters\n  const nameJob = giveitDATA.allchars.name;\n  const genderJob = giveitDATA.allchars.gender;\n  const heightJob = giveitDATA.allchars.height;\n  const massJob = giveitDATA.allchars.mass;\n  const homewJob = giveitDATA.allchars.homeworld;\n  const homewFetchJob = () => {\n    fetch(homewJob)\n    .then(response => response.json())\n    .then(world => this.setState({ cworlds: world }));\n  };\n  homewFetchJob();\n  const homewcValueJob = this.state.cworlds.name;\n  const homewValueJob = this.state.worlds.name;\n  \n  // Homeworlds\n  // const giveitDATA1 = this.state;\n  const nameJob1 = giveitDATA.worlds.name;\n  const genderJob1 = giveitDATA.worlds.climate;\n  const heightJob1 = giveitDATA.worlds.terrain;\n  const massJob1 = giveitDATA.worlds.population;\n  // const homewJob1 = giveitDATA1.worlds.residents;\n\n  // Starships\n  // const giveitDATA2 = this.state;\n  const nameJob2 = giveitDATA.ships.name;\n  const genderJob2 = giveitDATA.ships.model;\n  const heightJob2 = giveitDATA.ships.manufacturer;\n  const massJob2 = giveitDATA.ships.crew;\n  const homewJob2 = giveitDATA.ships.length;\n\n  // Vehicles\n  // const giveitDATA3 = this.state;\n  const nameJob3 = giveitDATA.vehix.name;\n  const genderJob3 = giveitDATA.vehix.model;\n  const heightJob3 = giveitDATA.vehix.manufacturer;\n  const massJob3 = giveitDATA.vehix.crew;\n  const homewJob3 = giveitDATA.vehix.length;\n\n  // Films\n  // const giveitDATA4 = this.state;\n  const nameJob4 = giveitDATA.films.title;\n  const genderJob4 = giveitDATA.films.episode_id;\n  const heightJob4 = giveitDATA.films.release_date;\n  const massJob4 = giveitDATA.films.opening_crawl;\n  // const homewJob4 = giveitDATA4.films.characters;\n\n  // View\n  // const viewToggleCalc = this.state;\n  const viewToggle = giveitDATA.cview;\n  // const viewToggleCalc1 = this.state;\n  const viewToggle1 = giveitDATA.wview;\n  // const viewToggleCalc2 = this.state;\n  const viewToggle2 = giveitDATA.sview;\n  // const viewToggleCalc3 = this.state;\n  const viewToggle3 = giveitDATA.vview;\n  // const viewToggleCalc4 = this.state;\n  const viewToggle4 = giveitDATA.fview;\n  const cButton = giveitDATA.charindex;\n  const wButton = giveitDATA.worldindex;\n  const sButton = giveitDATA.shipindex;\n  const vButton = giveitDATA.vehicleindex;\n  const fButton = giveitDATA.filmindex;\n    \n    return (\n        \n        <div className='tc App Headertop'>\n          <h1 className='f1'>Star Wars</h1>\n          <h1 className='f1'>Explorer</h1>\n          <div className='f1'>\n            <ButtonToolbar>\n              <Button variant=\"outline-secondary\" className='f1' onClick={ () => this.setState({ cview: 'Cvisible', wview: 'Invisible', sview: 'Invisible', vview: 'Invisible', fview: 'Invisible'})}>Characters</Button>\n              <Button variant=\"outline-secondary\" className='f1' onClick={ () => this.setState({ wview: 'Wvisible', cview: 'Invisible', sview: 'Invisible', vview: 'Invisible', fview: 'Invisible'})}>Homeworlds</Button>\n              <Button variant=\"outline-secondary\" className='f1' onClick={ () => this.setState({ sview: 'Svisible', wview: 'Invisible', cview: 'Invisible', vview: 'Invisible', fview: 'Invisible'})}>Starships</Button>\n              <Button variant=\"outline-secondary\" className='f1' onClick={ () => this.setState({ vview: 'Vvisible', wview: 'Invisible', sview: 'Invisible', cview: 'Invisible', fview: 'Invisible'})}>Vehicles</Button>\n              <Button variant=\"outline-secondary\" className='f1' onClick={ () => this.setState({ fview: 'Fvisible', wview: 'Invisible', sview: 'Invisible', vview: 'Invisible', cview: 'Invisible'})}>Films</Button>\n            </ButtonToolbar>\n          </div>\n          <div className='apptest'>\n            <div className={viewToggle}>\n              <div className='csstest'>\n              <h2>Characters</h2>\n                <Characters charName={nameJob} charHeight={heightJob} charMass={massJob} charHome={homewcValueJob} charGender={genderJob}>Characters</Characters>\n            <div className='npbtn'>\n            <ButtonToolbar className='npbtn'>\n            { cButton > 0 ? (<Button variant='outline-danger' className='npbtn' onClick={() => this.setState({ charindex: this.state.charindex - 1 })}> Prev </Button>)\n            : \n            ( <Button variant='outline-danger' className='npbtn'> Prev </Button>)\n            }\n            <div className='btnspace'>\n            </div>\n            { cButton < 9 ? (<Button variant='outline-primary' className='npbtn' onClick={() => this.setState({ charindex: this.state.charindex + 1 })}> Next </Button>)\n            : \n            ( <Button variant='outline-primary' className='npbtn'> Next </Button>)\n            }\n            </ButtonToolbar>\n            </div>\n            </div>\n            </div>\n            <div className={viewToggle1}>\n              <div className='csstest'>\n              <h2>Homeworlds</h2>\n                <Homeworlds charName={nameJob1} charHeight={heightJob1} charMass={massJob1} charHome={homewValueJob} charGender={genderJob1}>Characters</Homeworlds>\n            <div className='npbtn'>\n            <ButtonToolbar className='npbtn'>\n            { wButton > 0 ? (<Button variant='outline-danger' onClick={() => this.setState({ worldindex: this.state.worldindex - 1 })}> Prev </Button>)\n            : \n            ( <Button variant='outline-danger'> Prev </Button>)\n            }\n            <div className='btnspace'>\n            </div>  \n            { wButton < 9 ? (<Button variant='outline-primary' onClick={() => this.setState({ worldindex: this.state.worldindex + 1 })}> Next </Button>)\n            : \n            ( <Button variant='outline-primary'> Next </Button>)\n            }\n            </ButtonToolbar>\n            </div>\n            </div>\n            </div>\n            <div className={viewToggle2}>\n              <h2>Starships</h2>\n                <Starships charName={nameJob2} charHeight={heightJob2} charMass={massJob2} charHome={homewJob2} charGender={genderJob2}>Characters</Starships>\n            <div className='npbtn'>\n            <ButtonToolbar className='npbtn'>\n            { sButton > 0 ? (<Button variant='outline-danger' onClick={() => this.setState({ shipindex: this.state.shipindex - 1 })}> Prev </Button>)\n            : \n            ( <Button variant='outline-danger'> Prev </Button>)\n            }\n            <div className='btnspace'>\n            </div> \n            { sButton < 9 ? (<Button variant='outline-primary' onClick={() => this.setState({ shipindex: this.state.shipindex + 1 })}> Next </Button>)\n            : \n            ( <Button variant='outline-primary'> Next </Button>)\n            }\n            </ButtonToolbar>\n            </div>\n            </div>\n            <div className={viewToggle3}>\n              <h2>Vehicles</h2>\n                <Vehicles charName={nameJob3} charHeight={heightJob3} charMass={massJob3} charHome={homewJob3} charGender={genderJob3}>Characters</Vehicles>\n            <div className='npbtn'>\n            <ButtonToolbar className='npbtn'>\n            { vButton > 0 ? (<Button variant='outline-danger' onClick={() => this.setState({ vehicleindex: this.state.vehicleindex - 1 })}> Prev </Button>)\n            : \n            ( <Button variant='outline-danger'> Prev </Button>)\n            }\n            <div className='btnspace'>\n            </div>          \n            { vButton < 9 ? (<Button variant='outline-primary' onClick={() => this.setState({ vehicleindex: this.state.vehicleindex + 1 })}> Next </Button>)\n            : \n            ( <Button variant='outline-primary'> Next </Button>)\n            }\n            </ButtonToolbar>\n            </div>\n            </div>\n            <div className={viewToggle4}>\n              <h2>Films</h2>\n              \n                <Films charName={nameJob4} charHeight={heightJob4} charMass={massJob4} charHome={homewValueJob} charGender={genderJob4}>Characters</Films>\n            <div className='npbtn'>\n            <ButtonToolbar className='npbtn'>\n            { fButton > 0 ? (<Button variant='outline-danger' onClick={() => this.setState({ filmindex: this.state.filmindex - 1 })}> Prev </Button>)\n            : \n            ( <Button variant='outline-danger'> Prev </Button>)\n            }\n            <div className='btnspace'>\n            </div>             \n            { fButton < 6 ? (<Button variant='outline-primary' onClick={() => this.setState({ filmindex: this.state.filmindex + 1 })}> Next </Button>)\n            : \n            ( <Button variant='outline-primary'> Next </Button>)\n            }\n            </ButtonToolbar>\n            </div>\n          \n            </div>\n          </div>  \n        </div>\n      \n            );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import WebFont from 'webfontloader';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}